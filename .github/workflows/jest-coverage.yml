name: Jest Tests and Coverage

on:
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        token: ${{ secrets.MY_GITHUB_TOKEN }}

    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'  # Adjust if you're using a different version

    - name: Install dependencies
      run: npm ci

    - name: Run Jest tests with coverage
      run: npm test
      continue-on-error: true

    - name: Upload coverage report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: coverage-report
        path: coverage/

    - name: Comment PR with test results and coverage info
      uses: actions/github-script@v6
      if: always()
      with:
        github-token: ${{ secrets.MY_GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
          let coverageInfo = 'Coverage report not available.';
          
          try {
            if (fs.existsSync('coverage/coverage-summary.json')) {
              const coverageSum = JSON.parse(fs.readFileSync('coverage/coverage-summary.json', 'utf8'));
              const totalCoverage = coverageSum.total.lines.pct;
              coverageInfo = `Total coverage: ${totalCoverage}%`;
            }
          } catch (error) {
            console.error('Error reading coverage file:', error);
          }

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `Jest Test Results:
            ${process.env.npm_lifecycle_event === 'test' ? 'Tests completed successfully.' : 'There might be test failures. Please check the full log for details.'}

            Coverage Information:
            ${coverageInfo}

            See the uploaded artifacts for full details.`
          })